{
  "url": "https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map",
  "title": "Claude code docs map - Anthropic",
  "markdown": "[Anthropic home page![light logo](https://mintcdn.com/anthropic/PF_69UDRSEsLpN9D/logo/light.svg?fit=max&auto=format&n=PF_69UDRSEsLpN9D&q=85&s=963e6ff7a6fa0b7e91190b91eda1bcc9)![dark logo](https://mintcdn.com/anthropic/PF_69UDRSEsLpN9D/logo/dark.svg?fit=max&auto=format&n=PF_69UDRSEsLpN9D&q=85&s=976deddf2f26a84dd69133bd9ab074ad)](https://docs.anthropic.com/)\n\nEnglish\n\nSearch...\n\nCtrl K\n\nSearch...\n\nNavigation\n\n[Welcome](https://docs.anthropic.com/en/home) [Developer Platform](https://docs.anthropic.com/en/docs/intro) [Claude Code](https://docs.anthropic.com/en/docs/claude-code/overview) [Model Context Protocol (MCP)](https://docs.anthropic.com/en/docs/mcp) [API Reference](https://docs.anthropic.com/en/api/messages) [Resources](https://docs.anthropic.com/en/resources/overview) [Release Notes](https://docs.anthropic.com/en/release-notes/overview)\n\n# [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#claude-code-documentation-map)  Claude Code Documentation Map\n\nThis is a comprehensive map of all Claude Code documentation pages with their headings, designed for easy navigation by LLMs.\n\n> **Note:** This file is auto-generated by GitHub Actions. Do not edit manually.\n> Last updated: 2025-09-04 20:14:00 UTC\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#document-structure)  Document Structure\n\nThis map uses a hierarchical structure:\n\n- **##** marks documentation groups (e.g., ‘Getting started’)\n- **###** marks individual documentation pages\n- **Nested bullets** show the heading structure within each page\n- Each page title links to the full documentation\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#getting-started)  Getting started\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#overview)  [overview](https://docs.anthropic.com/en/docs/claude-code/overview.md)\n\n- Get started in 30 seconds\n- What Claude Code does for you\n- Why developers love Claude Code\n- Next steps\n- Additional resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#quickstart)  [quickstart](https://docs.anthropic.com/en/docs/claude-code/quickstart.md)\n\n- Before you begin\n- Step 1: Install Claude Code\n  - NPM Install\n  - Native Install\n- Step 2: Log in to your account\n- Step 3: Start your first session\n- Step 4: Ask your first question\n- Step 5: Make your first code change\n- Step 6: Use Git with Claude Code\n- Step 7: Fix a bug or add a feature\n- Step 8: Test out other common workflows\n- Essential commands\n- Pro tips for beginners\n- What’s next?\n- Getting help\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#common-workflows)  [common-workflows](https://docs.anthropic.com/en/docs/claude-code/common-workflows.md)\n\n- Understand new codebases\n  - Get a quick codebase overview\n  - Find relevant code\n- Fix bugs efficiently\n- Refactor code\n- Use specialized subagents\n- Use Plan Mode for safe code analysis\n  - When to use Plan Mode\n  - How to use Plan Mode\n  - Example: Planning a complex refactor\n  - Configure Plan Mode as default\n- Work with tests\n- Create pull requests\n- Handle documentation\n- Work with images\n- Reference files and directories\n- Use extended thinking\n- Resume previous conversations\n- Run parallel Claude Code sessions with Git worktrees\n- Use Claude as a unix-style utility\n  - Add Claude to your verification process\n  - Pipe in, pipe out\n  - Control output format\n- Create custom slash commands\n  - Create project-specific commands\n  - Add command arguments with $ARGUMENTS\n  - Create personal slash commands\n- Ask Claude about its capabilities\n  - Example questions\n- Next steps\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#build-with-claude-code)  Build with Claude Code\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#sub-agents)  [sub-agents](https://docs.anthropic.com/en/docs/claude-code/sub-agents.md)\n\n- What are subagents?\n- Key benefits\n- Quick start\n- Subagent configuration\n  - File locations\n  - File format\n    - Configuration fields\n  - Available tools\n- Managing subagents\n  - Using the /agents command (Recommended)\n  - Direct file management\n- Using subagents effectively\n  - Automatic delegation\n  - Explicit invocation\n- Example subagents\n  - Code reviewer\n  - Debugger\n  - Data scientist\n- Best practices\n- Advanced usage\n  - Chaining subagents\n  - Dynamic subagent selection\n- Performance considerations\n- Related documentation\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#output-styles)  [output-styles](https://docs.anthropic.com/en/docs/claude-code/output-styles.md)\n\n- Built-in output styles\n- How output styles work\n- Change your output style\n- Create a custom output style\n- Comparisons to related features\n  - Output Styles vs. CLAUDE.md vs. —append-system-prompt\n  - Output Styles vs. [Agents](https://docs.anthropic.com/en/docs/claude-code/sub-agents)\n  - Output Styles vs. [Custom Slash Commands](https://docs.anthropic.com/en/docs/claude-code/slash-commands)\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#hooks-guide)  [hooks-guide](https://docs.anthropic.com/en/docs/claude-code/hooks-guide.md)\n\n- Hook Events Overview\n- Quickstart\n  - Prerequisites\n  - Step 1: Open hooks configuration\n  - Step 2: Add a matcher\n  - Step 3: Add the hook\n  - Step 4: Save your configuration\n  - Step 5: Verify your hook\n  - Step 6: Test your hook\n- More Examples\n  - Code Formatting Hook\n  - Markdown Formatting Hook\n  - Custom Notification Hook\n  - File Protection Hook\n- Learn more\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#github-actions)  [github-actions](https://docs.anthropic.com/en/docs/claude-code/github-actions.md)\n\n- Why use Claude Code GitHub Actions?\n- What can Claude do?\n  - Claude Code Action\n- Setup\n- Quick setup\n- Manual setup\n- Upgrading from Beta\n  - Essential changes\n  - Breaking Changes Reference\n  - Before and After Example\n- Example use cases\n  - Basic workflow\n  - Using slash commands\n  - Custom automation with prompts\n  - Common use cases\n- Best practices\n  - CLAUDE.md configuration\n  - Security considerations\n  - Optimizing performance\n  - CI costs\n- Configuration examples\n- Using with AWS Bedrock & Google Vertex AI\n  - Prerequisites\n    - For Google Cloud Vertex AI:\n    - For AWS Bedrock:\n- Troubleshooting\n  - Claude not responding to @claude commands\n  - CI not running on Claude’s commits\n  - Authentication errors\n- Advanced configuration\n  - Action parameters\n    - Using claude\\_args\n  - Alternative integration methods\n  - Customizing Claude’s behavior\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#mcp)  [mcp](https://docs.anthropic.com/en/docs/claude-code/mcp.md)\n\n- What you can do with MCP\n- Popular MCP servers\n- Installing MCP servers\n  - Option 1: Add a local stdio server\n  - Option 2: Add a remote SSE server\n  - Option 3: Add a remote HTTP server\n  - Managing your servers\n- MCP installation scopes\n  - Local scope\n  - Project scope\n  - User scope\n  - Choosing the right scope\n  - Scope hierarchy and precedence\n  - Environment variable expansion in `.mcp.json`\n- Practical examples\n  - Example: Query your PostgreSQL database\n  - Example: Monitor errors with Sentry\n- Authenticate with remote MCP servers\n- Add MCP servers from JSON configuration\n- Import MCP servers from Claude Desktop\n- Use Claude Code as an MCP server\n- MCP output limits and warnings\n- Use MCP resources\n  - Reference MCP resources\n- Use MCP prompts as slash commands\n  - Execute MCP prompts\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#troubleshooting)  [troubleshooting](https://docs.anthropic.com/en/docs/claude-code/troubleshooting.md)\n\n- Common installation issues\n  - Windows installation issues: errors in WSL\n  - Linux and Mac installation issues: permission or command not found errors\n    - Recommended solution: Native Claude Code installation\n    - Alternative solution: Migrate to local installation\n- Permissions and authentication\n  - Repeated permission prompts\n  - Authentication issues\n- Performance and stability\n  - High CPU or memory usage\n  - Command hangs or freezes\n  - Search and discovery issues\n  - Slow or incomplete search results on WSL\n- IDE integration issues\n  - JetBrains IDE not detected on WSL2\n    - WSL2 networking modes\n  - Reporting Windows IDE integration issues (both native and WSL)\n  - ESC key not working in JetBrains (IntelliJ, PyCharm, etc.) terminals\n- Markdown formatting issues\n  - Missing language tags in code blocks\n  - Inconsistent spacing and formatting\n  - Best practices for markdown generation\n- Getting more help\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#claude-code-sdk)  Claude Code SDK\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#sdk-overview)  [sdk-overview](https://docs.anthropic.com/en/docs/claude-code/sdk/sdk-overview.md)\n\n- SDK Options\n- Why use the Claude Code SDK?\n- What can you build with the SDK?\n- Core Concepts\n  - Authentication\n  - Full Claude Code Feature Support\n  - System Prompts\n  - Tool Permissions\n  - Model Context Protocol (MCP)\n- Related Resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#sdk-headless)  [sdk-headless](https://docs.anthropic.com/en/docs/claude-code/sdk/sdk-headless.md)\n\n- Overview\n- Basic usage\n- Configuration Options\n- Multi-turn conversations\n- Output Formats\n  - Text Output (Default)\n  - JSON Output\n  - Streaming JSON Output\n- Input Formats\n  - Text Input (Default)\n  - Streaming JSON Input\n- Agent Integration Examples\n  - SRE Incident Response Bot\n  - Automated Security Review\n  - Multi-turn Legal Assistant\n- Best Practices\n- Related Resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#sdk-python)  [sdk-python](https://docs.anthropic.com/en/docs/claude-code/sdk/sdk-python.md)\n\n- Prerequisites\n- Installation\n- Quick start\n- Basic usage\n1. The `ClaudeSDKClient` class (recommended)\n2. The `query` function\n- Configuration options\n  - ClaudeCodeOptions parameters\n    - Parameter details\n    - Permission modes\n  - Advanced configuration example\n- Structured messages and image inputs\n- Multi-turn conversations\n  - Method 1: Using ClaudeSDKClient for persistent conversations\n- Custom system prompts\n- Custom tools via MCP\n- Custom permission prompt tool\n- Output formats\n  - Text output with streaming\n  - JSON output with metadata\n- Input formats\n- Agent integration examples\n  - SRE incident response agent\n  - Automated security review\n  - Multi-turn legal assistant\n- Python-specific best practices\n  - Key patterns\n  - IPython/Jupyter tips\n- Related resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#sdk-typescript)  [sdk-typescript](https://docs.anthropic.com/en/docs/claude-code/sdk/sdk-typescript.md)\n\n- Prerequisites\n- Installation\n- Basic usage\n- Configuration options\n- Multi-turn conversations\n  - Resume with session management\n- Streaming input mode\n  - Streaming input with images\n- Custom system prompts\n- MCP Server Integration\n- Custom tools with in-process MCP servers\n  - Creating custom tools\n  - Type safety with Zod\n- Hooks\n  - Defining hooks\n  - Available hook events\n  - Hook input types\n  - Hook output\n  - Practical examples\n    - Logging and monitoring\n    - File operation validation\n    - Auto-formatting code\n    - Prompt enhancement\n    - Custom compaction instructions\n  - Hook execution behavior\n  - Combining hooks with canUseTool\n- Permission control with canUseTool\n  - Use cases for canUseTool\n- Output formats\n  - Text output (default)\n  - JSON output\n- Input formats\n- Agent integration examples\n  - SRE incident response agent\n  - Automated security review\n  - Multi-turn legal assistant\n- Message schema\n- Related resources\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#deployment)  Deployment\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#third-party-integrations)  [third-party-integrations](https://docs.anthropic.com/en/docs/claude-code/third-party-integrations.md)\n\n- Provider comparison\n- Cloud providers\n- Corporate infrastructure\n- Configuration overview\n  - Using Bedrock with corporate proxy\n  - Using Bedrock with LLM Gateway\n  - Using Vertex AI with corporate proxy\n  - Using Vertex AI with LLM Gateway\n  - Authentication configuration\n- Choosing the right deployment configuration\n  - Direct provider access\n  - Corporate proxy\n  - LLM Gateway\n- Debugging\n- Best practices for organizations\n1. Invest in documentation and memory\n2. Simplify deployment\n3. Start with guided usage\n4. Configure security policies\n5. Leverage MCP for integrations\n- Next steps\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#amazon-bedrock)  [amazon-bedrock](https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock.md)\n\n- Prerequisites\n- Setup\n1. Enable model access\n2. Configure AWS credentials\n\n\n  - Advanced credential configuration\n    - Example configuration\n    - Configuration settings explained\n3. Configure Claude Code\n4. Model configuration\n5. Output token configuration\n- IAM configuration\n- Troubleshooting\n- Additional resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#google-vertex-ai)  [google-vertex-ai](https://docs.anthropic.com/en/docs/claude-code/google-vertex-ai.md)\n\n- Prerequisites\n- Region Configuration\n- Setup\n1. Enable Vertex AI API\n2. Request model access\n3. Configure GCP credentials\n4. Configure Claude Code\n5. Model configuration\n- IAM configuration\n  - 1M token context window\n- Troubleshooting\n- Additional resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#corporate-proxy)  [corporate-proxy](https://docs.anthropic.com/en/docs/claude-code/corporate-proxy.md)\n\n- Basic proxy configuration\n  - Environment variables\n- Authentication\n  - Basic authentication\n  - SSL certificate issues\n- Network access requirements\n- Additional resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#llm-gateway)  [llm-gateway](https://docs.anthropic.com/en/docs/claude-code/llm-gateway.md)\n\n- LiteLLM configuration\n  - Prerequisites\n  - Basic LiteLLM setup\n    - Authentication methods\n      - Static API key\n      - Dynamic API key with helper\n    - Unified endpoint (recommended)\n    - Provider-specific pass-through endpoints (alternative)\n      - Anthropic API through LiteLLM\n      - Amazon Bedrock through LiteLLM\n      - Google Vertex AI through LiteLLM\n  - Model selection\n- Additional resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#devcontainer)  [devcontainer](https://docs.anthropic.com/en/docs/claude-code/devcontainer.md)\n\n- Key features\n- Getting started in 4 steps\n- Configuration breakdown\n- Security features\n- Customization options\n- Example use cases\n  - Secure client work\n  - Team onboarding\n  - Consistent CI/CD environments\n- Related resources\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#administration)  Administration\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#setup)  [setup](https://docs.anthropic.com/en/docs/claude-code/setup.md)\n\n- System requirements\n  - Additional dependencies\n- Standard installation\n- Windows setup\n- Alternative installation methods\n  - Global npm installation\n  - Native binary installation (Beta)\n  - Local installation\n- Running on AWS or GCP\n- Update Claude Code\n  - Auto updates\n  - Update manually\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#iam)  [iam](https://docs.anthropic.com/en/docs/claude-code/iam.md)\n\n- Authentication methods\n  - Anthropic API authentication\n  - Cloud provider authentication\n- Access control and permissions\n  - Permission system\n  - Configuring permissions\n    - Permission modes\n    - Working directories\n    - Tool-specific permission rules\n  - Additional permission control with hooks\n  - Enterprise managed policy settings\n  - Settings precedence\n- Credential management\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#security)  [security](https://docs.anthropic.com/en/docs/claude-code/security.md)\n\n- How we approach security\n  - Security foundation\n  - Permission-based architecture\n  - Built-in protections\n  - User responsibility\n- Protect against prompt injection\n  - Core protections\n  - Privacy safeguards\n  - Additional safeguards\n- MCP security\n- Security best practices\n  - Working with sensitive code\n  - Team security\n  - Reporting security issues\n- Related resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#data-usage)  [data-usage](https://docs.anthropic.com/en/docs/claude-code/data-usage.md)\n\n- Data policies\n  - Data training policy\n  - Development Partner Program\n  - Feedback using the `/bug` command\n  - Data retention\n- Data flow and dependencies\n- Telemetry services\n- Default behaviors by API provider\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#monitoring-usage)  [monitoring-usage](https://docs.anthropic.com/en/docs/claude-code/monitoring-usage.md)\n\n- Quick Start\n- Administrator Configuration\n- Configuration Details\n  - Common Configuration Variables\n  - Metrics Cardinality Control\n  - Dynamic Headers\n    - Settings Configuration\n    - Script Requirements\n    - Important Limitations\n  - Multi-Team Organization Support\n  - Example Configurations\n- Available Metrics and Events\n  - Standard Attributes\n  - Metrics\n  - Metric Details\n    - Session Counter\n    - Lines of Code Counter\n    - Pull Request Counter\n    - Commit Counter\n    - Cost Counter\n    - Token Counter\n    - Code Edit Tool Decision Counter\n    - Active Time Counter\n  - Events\n    - User Prompt Event\n    - Tool Result Event\n    - API Request Event\n    - API Error Event\n    - Tool Decision Event\n- Interpreting Metrics and Events Data\n  - Usage Monitoring\n  - Cost Monitoring\n  - Alerting and Segmentation\n  - Event Analysis\n- Backend Considerations\n  - For Metrics:\n  - For Events/Logs:\n- Service Information\n- ROI Measurement Resources\n- Security/Privacy Considerations\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#costs)  [costs](https://docs.anthropic.com/en/docs/claude-code/costs.md)\n\n- Track your costs\n  - Using the `/cost` command\n  - Additional tracking options\n- Managing costs for teams\n  - Rate limit recommendations\n- Reduce token usage\n- Background token usage\n- Tracking version changes and updates\n  - Current version information\n  - Understanding changes in Claude Code behavior\n  - When cost reporting changes\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#analytics)  [analytics](https://docs.anthropic.com/en/docs/claude-code/analytics.md)\n\n- Access analytics\n  - Required roles\n- Available metrics\n  - Lines of code accepted\n  - Suggestion accept rate\n  - Activity\n  - Spend\n  - Team insights\n- Using analytics effectively\n  - Monitor adoption\n  - Measure productivity\n- Related resources\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#configuration)  Configuration\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#settings)  [settings](https://docs.anthropic.com/en/docs/claude-code/settings.md)\n\n- Settings files\n  - Available settings\n  - Permission settings\n  - Settings precedence\n  - Key points about the configuration system\n  - System prompt availability\n  - Excluding sensitive files\n- Subagent configuration\n- Environment variables\n- Configuration options\n  - Global configuration\n- Tools available to Claude\n  - Extending tools with hooks\n- See also\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#ide-integrations)  [ide-integrations](https://docs.anthropic.com/en/docs/claude-code/ide-integrations.md)\n\n- Features\n- Installation\n- Usage\n  - From your IDE\n  - From external terminals\n- Configuration\n  - JetBrains plugin settings\n    - General Settings\n    - ESC key configuration\n- Troubleshooting\n  - VS Code extension not installing\n  - JetBrains plugin not working\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#terminal-config)  [terminal-config](https://docs.anthropic.com/en/docs/claude-code/terminal-config.md)\n\n- Themes and appearance\n- Line breaks\n  - Set up Shift+Enter (VS Code or iTerm2):\n  - Set up Option+Enter (VS Code, iTerm2 or macOS Terminal.app):\n- Notification setup\n  - Terminal bell notifications\n  - iTerm 2 system notifications\n  - Custom notification hooks\n- Handling large inputs\n- Vim Mode\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#model-config)  [model-config](https://docs.anthropic.com/en/docs/claude-code/model-config.md)\n\n- Available models\n  - Model aliases\n  - Setting your model\n- Special model behavior\n  - `default` model setting\n  - `opusplan` model setting\n  - Extended context with \\[1m\\]\n- Checking your current model\n- Environment variables\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#memory)  [memory](https://docs.anthropic.com/en/docs/claude-code/memory.md)\n\n- Determine memory type\n- CLAUDE.md imports\n- How Claude looks up memories\n- Quickly add memories with the `#` shortcut\n- Directly edit memories with `/memory`\n- Set up project memory\n- Organization-level memory management\n- Memory best practices\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#statusline)  [statusline](https://docs.anthropic.com/en/docs/claude-code/statusline.md)\n\n- Create a custom status line\n- How it Works\n- JSON Input Structure\n- Example Scripts\n  - Simple Status Line\n  - Git-Aware Status Line\n  - Python Example\n  - Node.js Example\n  - Helper Function Approach\n- Tips\n- Troubleshooting\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#reference)  Reference\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#cli-reference)  [cli-reference](https://docs.anthropic.com/en/docs/claude-code/cli-reference.md)\n\n- CLI commands\n- CLI flags\n- See also\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#interactive-mode)  [interactive-mode](https://docs.anthropic.com/en/docs/claude-code/interactive-mode.md)\n\n- Keyboard shortcuts\n  - General controls\n  - Multiline input\n  - Quick commands\n- Vim editor mode\n  - Mode switching\n  - Navigation (NORMAL mode)\n  - Editing (NORMAL mode)\n- Command history\n- See also\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#slash-commands)  [slash-commands](https://docs.anthropic.com/en/docs/claude-code/slash-commands.md)\n\n- Built-in slash commands\n- Custom slash commands\n  - Syntax\n    - Parameters\n  - Command types\n    - Project commands\n    - Personal commands\n  - Features\n    - Namespacing\n    - Arguments\n      - All arguments with `$ARGUMENTS`\n      - Individual arguments with `$1`, `$2`, etc.\n    - Bash command execution\n    - File references\n    - Thinking mode\n  - Frontmatter\n- MCP slash commands\n  - Command format\n  - Features\n    - Dynamic discovery\n    - Arguments\n    - Naming conventions\n  - Managing MCP connections\n  - MCP permissions and wildcards\n- See also\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#hooks)  [hooks](https://docs.anthropic.com/en/docs/claude-code/hooks.md)\n\n- Configuration\n  - Structure\n  - Project-Specific Hook Scripts\n- Hook Events\n  - PreToolUse\n  - PostToolUse\n  - Notification\n  - UserPromptSubmit\n  - Stop\n  - SubagentStop\n  - PreCompact\n  - SessionStart\n  - SessionEnd\n- Hook Input\n  - PreToolUse Input\n  - PostToolUse Input\n  - Notification Input\n  - UserPromptSubmit Input\n  - Stop and SubagentStop Input\n  - PreCompact Input\n  - SessionStart Input\n  - SessionEnd Input\n- Hook Output\n  - Simple: Exit Code\n    - Exit Code 2 Behavior\n  - Advanced: JSON Output\n    - Common JSON Fields\n    - `PreToolUse` Decision Control\n    - `PostToolUse` Decision Control\n    - `UserPromptSubmit` Decision Control\n    - `Stop`/ `SubagentStop` Decision Control\n    - `SessionStart` Decision Control\n    - `SessionEnd` Decision Control\n    - Exit Code Example: Bash Command Validation\n    - JSON Output Example: UserPromptSubmit to Add Context and Validation\n    - JSON Output Example: PreToolUse with Approval\n- Working with MCP Tools\n  - MCP Tool Naming\n  - Configuring Hooks for MCP Tools\n- Examples\n- Security Considerations\n  - Disclaimer\n  - Security Best Practices\n  - Configuration Safety\n- Hook Execution Details\n- Debugging\n  - Basic Troubleshooting\n  - Advanced Debugging\n  - Debug Output Example\n\n## [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#resources)  Resources\n\n### [​](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map\\#legal-and-compliance)  [legal-and-compliance](https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance.md)\n\n- Legal agreements\n  - License\n  - Commercial agreements\n- Compliance\n  - Healthcare compliance (BAA)\n- Security and trust\n  - Trust and safety\n  - Security vulnerability reporting\n\nWas this page helpful?\n\nYesNo\n\nOn this page\n\n- [Claude Code Documentation Map](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#claude-code-documentation-map)\n- [Document Structure](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#document-structure)\n- [Getting started](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#getting-started)\n- [overview](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#overview)\n- [quickstart](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#quickstart)\n- [common-workflows](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#common-workflows)\n- [Build with Claude Code](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#build-with-claude-code)\n- [sub-agents](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#sub-agents)\n- [output-styles](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#output-styles)\n- [hooks-guide](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#hooks-guide)\n- [github-actions](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#github-actions)\n- [mcp](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#mcp)\n- [troubleshooting](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#troubleshooting)\n- [Claude Code SDK](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#claude-code-sdk)\n- [sdk-overview](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#sdk-overview)\n- [sdk-headless](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#sdk-headless)\n- [sdk-python](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#sdk-python)\n- [sdk-typescript](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#sdk-typescript)\n- [Deployment](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#deployment)\n- [third-party-integrations](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#third-party-integrations)\n- [amazon-bedrock](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#amazon-bedrock)\n- [google-vertex-ai](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#google-vertex-ai)\n- [corporate-proxy](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#corporate-proxy)\n- [llm-gateway](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#llm-gateway)\n- [devcontainer](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#devcontainer)\n- [Administration](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#administration)\n- [setup](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#setup)\n- [iam](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#iam)\n- [security](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#security)\n- [data-usage](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#data-usage)\n- [monitoring-usage](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#monitoring-usage)\n- [costs](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#costs)\n- [analytics](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#analytics)\n- [Configuration](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#configuration)\n- [settings](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#settings)\n- [ide-integrations](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#ide-integrations)\n- [terminal-config](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#terminal-config)\n- [model-config](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#model-config)\n- [memory](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#memory)\n- [statusline](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#statusline)\n- [Reference](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#reference)\n- [cli-reference](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#cli-reference)\n- [interactive-mode](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#interactive-mode)\n- [slash-commands](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#slash-commands)\n- [hooks](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#hooks)\n- [Resources](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#resources)\n- [legal-and-compliance](https://docs.anthropic.com/en/docs/claude-code/claude_code_docs_map#legal-and-compliance)\n\nAsk AI\nAI Avatar",
  "scrapedAt": "2025-09-08T19:30:21.176Z"
}